使用cin >> a; 这种方式输入时，cin会查找输入缓冲区非空白字符一直到接受到空白字符为止。（空白字符包括空格，换行符，tab符。）
因此输入char a[size]; 这种类型的字符串时，如果字符串包含空格用这种方式不能很好的处理。它只能读到字符串空格前部分字母。
这时候可以使用 cin.getline(a, size); 或者 cin.get(a, size);读取整行字符串，也就是遇到换行符才停止输入或者达到了size-1字符截止。
他们的区别是前者输入缓冲区不会保留换行符，后者会保留换行符。
因此如果要连续输入字符串时，cin.getline(a, size); 这种更方便，比如可以
cin.getline(a, size);
cin.getline(b, size); 
这样分别输入到不同的字符串数组里， 

而cin.get(a, size)需要这样，比如
cin.get(a, size);
cin.get();  //读取输入缓冲区的换行符
cin.get(b, size);
这样才行。上面get两行也可以使用这样表达 cin.get(a, size).get(); 
这种方式的好处是可以通过后面的get()得到的字符，来分辨是遇到换行符才停止输入还是达到了size-1字符截止的

记住cin >> a这种方式输入时，也是会保留换行符在输入缓冲区里的，
而这时如果在使用cin.getline(a, size); 或者 cin.get(a, size);会出问题，因为一开始就读到换行符就认为字符串输入结束了。
解决方法是在cin >> a 输入后使用一个cin.get(); 读取掉换行符
这种问题通常出现在需要输入一个数字后，紧接着又需要输入一个字符串的时候

那如果是连续的cin >> a, cin >> b这种方式会出问题吗？那就不会，
因为cin >> a(b) 这种方式输入时，cin如果首先遇到了空白符（包括换行符），
会忽略他们，直到遇到其他字符或者数字后的下一个空白符才会停止。因此不会有什么影响。
所以如果是用cin.get(a, size);输入字符串后，再通过cin >> b输入数字也不会有什么问题。
